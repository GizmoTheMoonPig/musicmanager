buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
        maven {
            url = 'https://repo.spongepowered.org/repository/maven-public/'
            content { includeGroup "org.spongepowered" }
        }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
    }
}

apply plugin: 'eclipse'
apply plugin:  'maven-publish'
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'

version = "${project.mc_version}-${project.mod_version}"
group = 'com.gizmo.music'
archivesBaseName = project.modid

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: 'official', version: "${project.mc_version}"

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')
            arg "-mixin.config=${project.modid}.mixins.json"
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'musicmanager'

            mods {
                "${project.modid}" {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            arg "-mixin.config=${project.modid}.mixins.json"
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'musicmanager'

            mods {
                "${project.modid}" {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')
            arg "-mixin.config=${project.modid}.mixins.json"
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'musicmanager'

            mods {
                "${project.modid}" {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            arg "-mixin.config=${project.modid}.mixins.json"
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'musicmanager', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                "${project.modid}" {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

mixin {
    add sourceSets.main, "${project.modid}.refmap.json"
    config "${project.modid}.mixins.json"
}

repositories {
    maven {
        url = "https://modmaven.dev/"
    }

    maven {
        name 'Curseforge Maven'
        url "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${project.mc_version}-${project.forge_version}"
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

    runtimeOnly fg.deobf("teamtwilight:twilightforest:4.2.1649:universal")
    runtimeOnly fg.deobf("curse.maven:blue-skies-312918:4460423")
    runtimeOnly fg.deobf("curse.maven:gel-api-378802:4489758")
    runtimeOnly fg.deobf("curse.maven:bumblezone-362479:4507366")
    //runtimeOnly fg.deobf("curse.maven:undergarden-379849:4057184")
    runtimeOnly fg.deobf("curse.maven:aether-255308:4505291")
    runtimeOnly fg.deobf("curse.maven:wither-storm-621405:4468077")
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : project.mod_name,
                "Specification-Vendor"    : "GizmoTheMoonPig",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.mod_name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "GizmoTheMoonPig",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}